{"version":3,"sources":["node_modules/@tuicom/l10n/l10n.js","l10n/translations.json","main.js"],"names":["module","exports","translations","Tui6mTutorialComponent","shadow","attachShadow","mode","addEventListener","ev","rect","target","getBoundingClientRect","tuiCottonBall","publish","getAttribute","xPos","clientX","left","yPos","clientY","top","subscribe","componentName","scope","eventName","data","style","backgroundColor","color","HTMLElement","xhr","XMLHttpRequest","innerHTML","JSON","parse","response","value","error","console","open","middlelayerUrl","send","l10n","tl","loadRandomNumber","assetsUrl","indexOf","customElements","define"],"mappings":"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","file":"main.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = l10n;\n\nfunction l10n(translations) {\n  Object.keys(translations).forEach(function (loc) {\n    catalogs[loc] = catalogs[loc] || {};\n    Object.keys(translations[loc]).forEach(function (msgid) {\n      return catalogs[loc][msgid] = translations[loc][msgid];\n    });\n    fallbacks[loc.substr(0, 2)] = loc;\n  });\n}\n/**\n * Translates a string into the given locale.\n *\n * @param  string msgid the message to translate\n * @param  string loc the target locale\n * @return string the translated message, or, if there is no translation, the original message\n */\n\n\nl10n.tl = function (msgid, loc) {\n  return getEntry(msgid, loc) || msgid;\n};\n/**\n * Translates a string in a certain context into the given locale.\n *\n * This is useful when two original strings have different meanings and will most\n * likely require different translations.\n *\n * For example, in a financial context, the English word “amount” would translate\n * to the German „Betrag“, while in a context where items are counted, the German\n * translation would be „Anzahl“. Prefixing the translation with a context allows\n * translators to add both translations.\n *\n * @param  string context the context\n * @param  string msgid the message to translate\n * @param  string loc the target locale\n * @return string the translated message, or, if there is no translation, the original message\n */\n\n\nl10n.xl = function (context, msgid, loc) {\n  return getEntry(context + \"\\x04\" + msgid, loc) || msgid;\n};\n/**\n * Translates a pluralized string in a certain context into the given locale.\n *\n * This function uses “pluralisation rules” to determine the correct form in the target\n * language. For example, many languages have more than two plural forms, and this\n * function will select the correct one.\n *\n * NOTE: This function will not fill in the value into the placeholder in the\n * plural form, but only return the correct message. You must either use something like\n * sprintf() or some other replacement implementation, e.g. `msg.replace(\"%s\", value)`.\n *\n * @param  string msgid the message to translate, singular form\n * @param  string msgidPlural the message to translate, plural form\n * @param  integer amount number to use to determine the correct plural form\n * @param  string loc the target locale\n * @return string the translated message, or, if there is no translation, the original message\n */\n\n\nl10n.nl = function (msgid, msgidPlural, amount, loc) {\n  var entry = getEntry(msgid, loc);\n  return entry && entry[0] && entry[1] ? entry[getPluralMessageIdx(amount)] : amount === 1 ? msgid : msgidPlural;\n};\n/**\n * Translates a string into the currently set locale.\n *\n * @param  string msgid the message to translate\n * @return string the translated message, or, if there is no translation, the original message\n */\n\n\nl10n.t = l10n.tl;\n/**\n * Translates a string in a certain context into the currently set locale.\n *\n * This is useful when two original strings have different meanings and will most\n * likely require different translations.\n *\n * For example, in a financial context, the English word “amount” would translate\n * to the German „Betrag“, while in a context where items are counted, the German\n * translation would be „Anzahl“. Prefixing the translation with a context allows\n * translators to add both translations.\n *\n * @param  string context the context\n * @param  string msgid the message to translate\n * @return string the translated message, or, if there is no translation, the original message\n */\n\nl10n.x = l10n.xl;\n/**\n * Translates a pluralized string in a certain context into the currently set locale.\n *\n * This function uses “pluralisation rules” to determine the correct form in the target\n * language. For example, many languages have more than two plural forms, and this\n * function will select the correct one.\n *\n * NOTE: This function will not fill in the value into the placeholder in the\n * plural form, but only return the correct message. You must either use something like\n * sprintf() or some other replacement implementation, e.g. `msg.replace(\"%s\", value)`.\n *\n * @param  string msgid the message to translate, singular form\n * @param  string msgidPlural the message to translate, plural form\n * @param  integer amount number to use to determine the correct plural form\n * @return string the translated message, or, if there is no translation, the original message\n */\n\nl10n.n = l10n.nl;\n\nl10n.setLocale = function (loc\n/*, _init*/\n) {\n  locale = loc;\n  language = locale.substr(0, 2); // disabled for now, because breaks IE11\n  // _init || document.dispatchEvent(new CustomEvent(\"l10n.locale.switch\", { detail : { locale } }));\n};\n\ndocument.addEventListener(\"l10n.locale.set\", function (ev) {\n  return l10n.setLocale(ev.detail.locale);\n}); // private\n\nvar locale,\n    language,\n    fallbacks = {};\nl10n.setLocale(navigator.language, true);\n\nl10n.getLocale = function () {\n  return locale;\n};\n\nvar catalogs = {};\nvar pluralCallbacks = {};\n\nvar getEntry = function getEntry(msgid, loc) {\n  var lang = loc ? loc.substr(0, 2) : language;\n  var key; // Determine which entry to use. Either from the requested locale (`loc` parameter\n  // used by the tl/xl/nl methods), or its language. Or from the global locale (used\n  // by the t/x/n methods), or its language.\n\n  if (catalogs[loc]) key = loc;else if (catalogs[fallbacks[lang]]) key = fallbacks[lang];else if (!loc && catalogs[locale]) key = locale;else if (!loc && catalogs[fallbacks[language]]) key = fallbacks[language];\n  return catalogs[key] ? catalogs[key][msgid] : undefined;\n};\n\nvar getPluralMessageIdx = function getPluralMessageIdx(amount) {\n  if (!pluralCallbacks[language])\n    /*jshint evil:true */\n    pluralCallbacks[language] = new Function(\"n\", \"return (\".concat(plurals[language] || plurals._default, \") | 0\"));\n  return pluralCallbacks[language](amount);\n}; // Gettext pluralisation rules for many languages\n\n\nvar plurals = {\n  _default: \"n!=1\",\n  ak: \"n>1\",\n  am: \"n>1\",\n  ar: \"(n==0)?0:((n==1)?1:((n==2)?2:((n%100>=3&&n%100<=10)?3:((n%100>=11&&n%100<=99)?4:5))))\",\n  arn: \"n>1\",\n  ay: \"0\",\n  be: \"(n%10==1&&n%100!=11)?0:((n%10>=2&&n%10<=4&&(n%100<10||n%100>=20))?1:2)\",\n  bo: \"0\",\n  br: \"n>1\",\n  bs: \"(n%10==1&&n%100!=11)?0:((n%10>=2&&n%10<=4&&(n%100<10||n%100>=20))?1:2)\",\n  cs: \"(n==1)?0:((n>=2&&n<=4)?1:2)\",\n  csb: \"(n==1)?0:((n%10>=2&&n%10<=4&&(n%100<10||n%100>=20))?1:2)\",\n  cy: \"(n==1)?0:((n==2)?1:((n!=8&&n!=11)?2:3))\",\n  dz: \"0\",\n  fa: \"0\",\n  fil: \"n>1\",\n  fr: \"n>1\",\n  ga: \"(n==1)?0:((n==2)?1:((n<7)?2:((n<11)?3:4)))\",\n  gun: \"n>1\",\n  hr: \"(n%10==1&&n%100!=11)?0:((n%10>=2&&n%10<=4&&(n%100<10||n%100>=20))?1:2)\",\n  hy: \"0\",\n  id: \"0\",\n  ja: \"0\",\n  jv: \"n!=0\",\n  ka: \"0\",\n  km: \"0\",\n  ko: \"0\",\n  kw: \"(n==1)?0:((n==2)?1:((n==3)?2:3))\",\n  ky: \"0\",\n  ln: \"n>1\",\n  lo: \"0\",\n  lt: \"(n%10==1&&n%100!=11)?0:((n%10>=2&&(n%100<10||n%100>=20))?1:2)\",\n  lv: \"(n%10==1&&n%100!=11)?0:((n!=0)?1:2)\",\n  mg: \"n>1\",\n  mi: \"n>1\",\n  mk: \"(n==1||n%10==1)?0:1\",\n  ms: \"0\",\n  mt: \"(n==1)?0:((n==0||(n%100>1&&n%100<11))?1:((n%100>10&&n%100<20)?2:3))\",\n  nso: \"n>1\",\n  pl: \"(n==1)?0:((n%10>=2&&n%10<=4&&(n%100<10||n%100>=20))?1:2)\",\n  pt: \"n>1\",\n  ro: \"(n==1)?0:((n==0||(n%100>0&&n%100<20))?1:2)\",\n  ru: \"(n%10==1&&n%100!=11)?0:((n%10>=2&&n%10<=4&&(n%100<10||n%100>=20))?1:2)\",\n  sk: \"(n==1)?0:((n>=2&&n<=4)?1:2)\",\n  sl: \"(n%100==1)?0:((n%100==2)?1:((n%100==3||n%100==4)?2:3))\",\n  sr: \"(n%10==1&&n%100!=11)?0:((n%10>=2&&n%10<=4&&(n%100<10||n%100>=20))?1:2)\",\n  su: \"0\",\n  th: \"0\",\n  ti: \"n>1\",\n  tr: \"0\",\n  uk: \"(n%10==1&&n%100!=11)?0:((n%10>=2&&n%10<=4&&(n%100<10||n%100>=20))?1:2)\",\n  uz: \"0\",\n  vi: \"0\",\n  wa: \"n>1\",\n  zh: \"0\"\n};\n\n","module.exports={\"de-DE\":{\"Hello World\":\"\"},\"fr-FR\":{\"Hello World\":\"\"}};","import l10n from \"@tuicom/l10n\";\nimport translations from \"./l10n/translations.json\";\nl10n(translations);\n\nexport class Tui6mTutorialComponent extends HTMLElement {\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: \"open\" });\n    this.addEventListener(\"click\", ev => {\n      let rect = ev.target.getBoundingClientRect();\n\n      tuiCottonBall.publish(\n        \"tutorial-component\",\n        this.getAttribute(\"scope\") || \"*\",\n        \"click\",\n        { xPos: ev.clientX - rect.left, yPos: ev.clientY - rect.top }\n      );\n    });\n    tuiCottonBall.subscribe(\n      \"tutorial-component\",\n      this.getAttribute(\"scope\") || \"*\",\n      \"background.change\",\n      (componentName, scope, eventName, data) => {\n        this.style.backgroundColor = data.color;\n      }\n    );\n  }\n\n  loadRandomNumber() {\n    const xhr = new XMLHttpRequest(),\n      shadow = this.shadow; // must be reassigned due to closure scope\n\n    xhr.addEventListener(\"load\", function() {\n      shadow.innerHTML += ` ${JSON.parse(this.response).value}`;\n    });\n\n    xhr.addEventListener(\"error\", error => console.error(error));\n\n    xhr.open(\"GET\", middlelayerUrl);\n    xhr.send();\n  }\n\n  static get observedAttributes() {\n    return [\"locale\", \"scope\", \"level\"];\n  }\n\n  connectedCallback() {\n    this.shadow.innerHTML = `\n      <style>\n        :host {\n          /* The \"all\" property resets any CSS inherited from the outer context */\n          all: initial;\n          display: block;\n          border: 5px solid #aaa;\n          background: #daffd5;\n          padding: 20px;\n        }\n        :host([level=\"warning\"]) {\n          border-color: #ff9900\n        }\n        :host([level=\"alert\"]) {\n          border-color: #900\n        }\n      </style>\n      <div>${l10n.tl(\"Hello World\", this.getAttribute(\"locale\"))}</div>\n      <div>${l10n.tl(\"Biciclets\", this.getAttribute(\"locale\"))}</div>\n  `;\n    this.loadRandomNumber();\n  }\n}\n\nlet assetsUrl = \"__TUI_6M_ASSETS_URL__\",\n  middlelayerUrl = \"__TUI_6M_MIDDLELAYER_URL__\";\n\n// development fallback\nif (assetsUrl.indexOf(\"__\") === 0) {\n  assetsUrl = \"http://localhost:3000\";\n  middlelayerUrl = \"http://localhost:3500\";\n}\n\ncustomElements.define(\"tui-6m-tutorial-component\", Tui6mTutorialComponent);\n"]}